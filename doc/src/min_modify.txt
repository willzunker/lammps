"LAMMPS WWW Site"_lws - "LAMMPS Documentation"_ld - "LAMMPS Commands"_lc :c

:link(lws,http://lammps.sandia.gov)
:link(ld,Manual.html)
:link(lc,Section_commands.html#comm)

:line

min_modify command :h3

[Syntax:]
s
min_modify keyword values ... :pre

one or more keyword/value pairs may be listed :ulb,l
these keywords apply to various min styles :l
keyword = {dmax} or {line} :l
  {dmax} arg = max
    max = maximum distance for line search to move (distance units)
  {line} arg = {backtrack} or {quadratic} or {forcezero}
    backtrack,quadratic,forcezero = style of linesearch to use :pre
these keywords apply only to the {adaptglok} "min_style"_min_style.html :l
keyword = {integrator} or {tmax} or {tmin} or {delaystep} or {dtgrow} or {dtshrink} or {alpha0} or {alphashrink} or {relaxbox} or {relaxbox_mod} or {relaxbox_rate} or {ptol} or {halfstepback} or {initialdelay} or {vdfmax} :l
  {integrator} arg = {eulerimplicit} or {eulerexplicit} or {verlet} or {leapfrog}
    eulerimplicit,eulerexplicit,verlet,leapfrog = integration scheme
  {tmax} arg = coef
    coef = factor defining the maximum timestep
  {tmin} arg = coef
    coef = factor defining the minimum timestep
  {delaystep} arg = delay
    delay = number of steps for dynamics temporization
  {dtgrow} arg = grow
    grow = factor increasing the timestep
  {dtshrink} arg = shrink
    shrink = factor decreasing the timestep
  {alpha0} arg = alpha
    alpha = coefficient mixing velocities and forces
  {alphashrink} arg = shrink
    shrink = factor decreasing alpha
  {relaxbox} arg = {no} or {iso} or {aniso} or {x} or {y} or {z}
    no = no changes in box dimension (default)
    iso, aniso, x, y, z = type of box relaxation
  {relaxbox_mod} arg = modulus
    modulus = bulk modulus of the system, order of magnitude (pressure units)
  {relaxbox_rate} arg = rate
    rate = scaling factor to relax the box dimensions
  {ptol} arg = pressure
    pressure = threshold below which the box pressure is considered as null (pressure units)
  {vdfmax} arg = max 
    max = maximum number of consecutive iterations with P(t) < 0 before forced interruption 
  {halfstepback} arg = {yes} or {no}
  {initialdelay} arg = {yes} or {no} :pre
:ule

[Examples:]

min_modify dmax 0.2
min_modify integrator verlet tmax 0.4 relaxbox y relaxbox_mod 2e7 :pre

[Description:]

This command sets parameters that affect the energy minimization
algorithms selected by the "min_style"_min_style.html command.  The
various settings may affect the convergence rate and overall number of
force evaluations required by a minimization, so users can experiment
with these parameters to tune their minimizations.

The {cg} and {sd} minimization styles have an outer iteration and an
inner iteration which is steps along a one-dimensional line search in
a particular search direction.  The {dmax} parameter is how far any
atom can move in a single line search in any dimension (x, y, or z).
For the {quickmin} and {fire} minimization styles, the {dmax} setting
is how far any atom can move in a single iteration (timestep).  Thus a
value of 0.1 in real "units"_units.html means no atom will move
further than 0.1 Angstroms in a single outer iteration.  This prevents
highly overlapped atoms from being moved long distances (e.g. through
another atom) due to large forces.

The choice of line search algorithm for the {cg} and {sd} minimization
styles can be selected via the {line} keyword.
The default {quadratic} line search algorithm starts out using
the robust backtracking method described below. However, once
the system gets close to a local
minimum and the linesearch steps get small, so that the energy
is approximately quadratic in the step length, it uses the
estimated location of zero gradient as the linesearch step,
provided the energy change is downhill.
This becomes more efficient than backtracking
for highly-converged relaxations. The {forcezero}
line search algorithm is similar to {quadratic}.
It may be more efficient than {quadratic} on some systems.

The backtracking search is robust and should always find a local energy
minimum.  However, it will "converge" when it can no longer reduce the
energy of the system.  Individual atom forces may still be larger than
desired at this point, because the energy change is measured as the
difference of two large values (energy before and energy after) and
that difference may be smaller than machine epsilon even if atoms
could move in the gradient direction to reduce forces further.

The style {adaptglok} has several parameters that can be tuned in order
to optimize the relaxation: {integrator}, {tmax}, {tmin}, {delaystep}, {dtgrow}, {dtshrink}, 
{alpha0}, and {alphashrink}.
Different Newton {integrator} can be selected: explicit Euler, 
semi-implicit Euler (= symplectic Euler), leapfrog, and velocity Verlet.
The parameters {tmax} and {tmin} define the maximum and minimum timestep 
allowed during an adaptglok minimization. Those are not in time unit, but are 
multiplication factor applied to the "timestep"_timestep.html. Thus 
{tmax} = 10.0 in metal "units"_units.html means that the maximum value
the timestep can be reached during the relaxation is 10 fs (with the default
"timestep"_timestep.html value).
Note that even with the default parameters being chosen to be reliable in most
cases, adjusting "timestep"_timestep.html, {tmax} and {tmin} should be consider
to optimize the minimization, in particular for large/complex system.
An additionnal stopping criteria {vdfmax} is added in order to avoid unnecessary looping
when it is reasonable to think the system will not be relaxed further.
Note that in this case the system will NOT be relaxed. This could
happen when the system comes to be stuck in a local basin of the phase space. 
{vdfmax} is the maximum number of consecutive iterations with P(t) < 0. 
For debugging purposes, it is possible to switch off the inertia correction 
({halfstepback} = {no}) and the initial temporization ({initialdelay} = {no}).

The style {adaptglok} performing a damped dynamics, it is not possible to use
"fix box/relax"_fix_box_relax.html to relax the simulation box.
Thus {adaptglok} implements a rudimentary box relaxation procedure that can be
controlled by the keywords {relaxbox}, {relaxbox_mod}, {relaxbox_rate} 
and {ptol}.
The argument {relaxbox} controle in which directions the pressure is relaxed.
Note that the corresponding directions have to be periodic.
Note also that {relaxbox_mod} doesn't requires the exact value for the bulk modulus,
but rather the order of magnitude (in pressure "units"_units.html).
Ultimately, {relaxbox_mod} and {relaxbox_rate} 
control how fast the relaxation of the box is performed: lower values will slow
down the box relaxation but improve the stability of the procedure.

NOTE: the option {relaxbox} is currently experimental and often 
requires to tune the communication cutoff for gost atoms with the command 
"comm_modify cutoff"_comm_modify.html. The value will depend on the expected
box variation and the number of cpu. A value from 2 to 3 times the current cutoff
(largest pair cutoff + neighbor skin) is often enough.

[Restrictions:] none

[Related commands:]

"min_style"_min_style.html, "minimize"_minimize.html

[Default:]

The option defaults are dmax = 0.1, line = quadratic, 
integrator = eulerimplicit, tmax = 10.0, tmin = 0.02,
delaystep = 20, dtgrow = 1.1, dtshrink = 0.5, alpha0 = 0.25, alphashrink = 0.99,
relaxbox = no, relaxbox_mod = 1e6 and relaxbox_rate = 0.33, ptol = 0.1
vdfmax = 2000, halfstepback = yes and initialdelay = yes.
