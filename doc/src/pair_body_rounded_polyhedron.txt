"LAMMPS WWW Site"_lws - "LAMMPS Documentation"_ld - "LAMMPS Commands"_lc :c

:link(lws,http://lammps.sandia.gov)
:link(ld,Manual.html)
:link(lc,Section_commands.html#comm)

:line

pair_style body/rounded/polyhedron command :h3

[Syntax:]

pair_style body/rounded/polyhedron c_n c_t mu delta_ua cutoff :pre

c_n = normal damping coefficient
c_t = tangential damping coefficient
mu = normal friction coefficient during gross sliding
delta_ua = multiple contact scaling factor
cutoff = global separation cutoff for interactions (distance units), see below for definition :pre

[Examples:]

pair_style body/rounded/polyhedron 20.0 5.0 0.0 1.0 0.5
pair_coeff * * 100.0 1.0
pair_coeff 1 1 100.0 1.0 :pre

[Description:]

Style {body/rounded/polygon} is for use with 3d models of body
particles of style {rounded/polyhedron}.  It calculates pairwise
body/body interactions as well as interactions between body and
point-particles.  See "Section 6.14"_Section_howto.html#howto_14 of
the manual and the "body"_body.html doc page for more details on using
body particles.

TRUNG: I think we need a paragraph here about how body/sphere
interactions are handled.  Does this pair style only do body/body but
allow for a body = sphere or rod or some other degenerate case?  Or
does this pair style allow you to model a simulation of mixed body and
point particles, where point particles are spheroids.  If so, does
this pair style do body/body and body/point, and you use one of the
other granular pair styles to do point/point?  I.e. a pair hybrid
model?  Or does everything have to be defined as bodies.  Actually
this paragraph would make more sense in the body.txt file about how to
create a model that includes non-body particles (spheres).  And in
this pair style file just a couple lines about which part of the
interactions this pair style computes.  Ditto in the pair body polygon
file.

This pairwise interaction between rounded polyhedra is described in
"Wang"_#Wang, where a polyhedron does not have sharp corners and
edges, but is rounded at its vertices and edges by spheres centered on
each vertex with a specified diameter.  The edges if the polyhedron
are defined between pairs of adjacent vertices.  Its faces are defined
by a loop of edges.  The sphere diameter for each polygon is specified
in the data file read by the "read data"_read_data.html command.  This
is a discrete element model (DEM) which allows for multiple contact
points.

Note that when two particles interact, the effective surface of each
polyhedron particle is displaced outward from each of its vertices,
edges, and faces by half its sphere diameter.  The interaction forces
and energies between two particles are defined with respect to the
separation of their respective rounded surfaces, not by the separation
of the vertices, edges, and faces themselves.

This means that the specified cutoff in the pair_style command should
be large enough to encompass the center-to-center distance between two
particles (at any orientation) which would produce a surface-surface
overlap.  For example, consider two cubic particles with edge length =
1.0 and sphere diameter 0.2.  The maximum distance of one polygon's
surface from its center is not sqrt(3)/2, but (sqrt(3)+0.1)/2.  Thus
the cutoff distance should be sqrt(3) + 0.1, since the surfaces of two
particles that far apart could be touching.

The forces between vertex-vertex, vertex-edge, vertex-face, edge-edge,
and edge-face overlaps are given by:

:c,image(Eqs/pair_body_rounded.jpg)

:c,image(JPG/pair_body_rounded.jpg)

In "Wang"_#Wang, the tangential friction force between two particles
that are in contact is modeled differently prior to gross sliding
(i.e. static friction) and during gross-sliding (kinetic friction).
The latter takes place when the tangential deformation exceeds the
Coulomb frictional limit.  In the current implementation, however, we
do not take into account frictional history, i.e. we do not keep track
of how many time steps the two particles have been in contact nor
calculate the tangential deformation.  Instead, we assume that gross
sliding takes place as soon as two particles are in contact.

The following coefficients must be defined for each pair of atom types
via the "pair_coeff"_pair_coeff.html command as in the examples above,
or in the data file read by the "read_data"_read_data.html command:

k_n (energy/distance^2 units)
k_na (energy/distance^2 units) :ul

Effectively, k_n and k_na are the slopes of the red lines in the plot
above for force versus distance, for r < 0 and 0 < r < rc
respectively.  TRUNG: is this sentence correct?

[Mixing, shift, table, tail correction, restart, rRESPA info]:

This pair style does not support the "pair_modify"_pair_modify.html
mix, shift, table, and tail options.

This pair style does not write its information to "binary restart
files"_restart.html.  Thus, you need to re-specify the pair_style and
pair_coeff commands in an input script that reads a restart file.

This pair style can only be used via the {pair} keyword of the
"run_style respa"_run_style.html command.  It does not support the
{inner}, {middle}, {outer} keywords.

[Restrictions:]

These pair styles are part of the BODY package.  They are only enabled
if LAMMPS was built with that package.  See the "Making
LAMMPS"_Section_start.html#start_3 section for more info.

This pair style requires the "newton"_newton.html setting to be "on"
for pair interactions.

[Related commands:]

"pair_coeff"_pair_coeff.html

[Default:] none

:link(Wang)
[(Wang)] J. Wang, H. S. Yu, P. A. Langston, F. Y. Fraige, Granular
Matter, 13, 1 (2011).

