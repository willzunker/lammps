"LAMMPS WWW Site"_lws - "LAMMPS Documentation"_ld - "LAMMPS Commands"_lc :c

:link(lws,http://lammps.sandia.gov)
:link(ld,Manual.html)
:link(lc,Commands_all.html)

:line

pair_style granular command :h3
pair_style granular/multi command :h3

[Syntax:]

pair_style style cutoff :pre

style = {granular} or {granular/multi} :ulb,l
cutoff = global cutoff (optional). See discussion below.

[Examples:]

pair_style granular
pair coeff 1 1 hertz 1000.0 50.0 tangential mindlin 800.0 50.0 0.5 rolling sds 500.0 200.0 0.5 twisting marshall 
pair coeff 2 2 hertz 200.0 20.0 tangential mindlin 300.0 50.0 0.1 rolling sds 200.0 100.0 0.1 twisting marshall

pair_style granular/multi
pair coeff 1 1 hertz 1000.0 50.0 tangential mindlin 800.0 50.0 0.5 rolling sds 500.0 200.0 0.5 twisting marshall 
pair coeff 2 2 dmt 1000.0 50.0 800.0 10.0 tangential mindlin 800.0 50.0 0.1 roll sds 500.0 200.0 0.1 twisting marshall
pair coeff 1 2 dmt 1000.0 50.0 800.0 10.0 tangential mindlin 800.0 50.0 0.1 roll sds 500.0 200.0 0.1 twisting marshall


[Description:]

The {granular} styles support a variety of options for the normal, tangential, rolling and twisting
forces resulting from contact between two granular particles. The computed force depends on the combination
of choices for these models.

All model options and parameters are entered in the "pair_coeff"_pair_coeff.html command, as described below. 
Unlike e.g. "pair gran/hooke"_pair_gran.html, coefficient values are not global, but can be set to different values for 
various combinations of particle types, as determined by the "pair_coeff"_pair_coeff.html command.
In the case of {granular}, coefficients
can vary between particle types, but model choices cannot. For instance, in the first 
example above, the stiffness, damping, and tangential friction are different for type 1 - type 1 and type 2 - type 2 interactions, but
both 1-1 and 2-2 interactions must have the same model form, hence all keywords are identical between the two types. Cross-coefficients
for 1-2 interactions for the case of the {hertz} model above are set via simple geometric mixing rules. The {granular/multi}
style removes this restriction at a small cost in computational efficiency, so that different particle types
can potentially interact via different model forms. As shown in the second example,
1-1 interactions are based on a Hertzian contact model and 2-2 interactions are based on a {dmt} model (see below). 
In the case that 1-1 and 2-2 interactions have different model forms, mixing of coefficients cannot be 
determined, so 1-2 interactions must be explicitly defined via the pair coeff command, otherwise an error results.

The first required keyword for the pair coeff command is the normal contact model. Currently supported options and
the required arguments are:

{hooke} : k_n, damping
{hertz} : k_n, damping
{hertz/material} : E, damping, G
{dmt} : E, damping, G, cohesion
{jkr} : E, damping, G, cohesion
   
Here, k_n is spring stiffness, damping is a damping constant or a coefficient of restitution, depending on
the choice of damping model (see below), E and G are Young's modulus and shear modulus, in units of pressure, 
and cohesion is a surface energy density, in units of energy/length^2. 

For the {hooke} model, the normal component of force is given by:
:c,image(Eqs/hooke_normal.jpg)

For {hertz}, the normal force is given by:
:c,image{Eqs/hertz_normal.jpg}

For both [hooke] and [hertz], stiffness for unspecified cross-terms is given by simple geometric mixing
(e.g. if stiffness is specified for type 1 and type 2 particles as k_n_1 and k_n_2, respectively, 
type 1 - type 2 contacts use a stiffness given by k_n_{12} = sqrt(k_n_1*k_n_2))

For {hertz/material}, the form is the same as above, but coefficients are computed differently, and mixing follows
a different rule based on shear modulus:
:c,image{Eqs/hertz_material_normal.jpg}

For {dmt}, the normal force is given by:
:c,image{Eqs/dmt_normal.jpg}

Where gamma is cohesion.

For {jkr}, the normal force is given by:
:c,image{Eqs/jkr_normal.jpg}

The same mixing rule for stiffness as for {hertz/material} is used by both the {dmt} and {jkr} models. 
 
The tangential contact model must also be specified, which follows
the required {tangential} keyword. Currently supported options
and their required arguments are:

{no_history}: k_t, tangential_damping, friction coefficient
{mindlin}: k_t, tangential_damping, friction coefficient
 
For {no_history}, the tangential force is computed according to 

The total force on a particle is the sum of the normal and tangential forces from all interactions. The tangential
force also induces a torque on both particles in a contacting pair. Additionally, rolling and twisting friction
models can also be applied, which may induce additional torques (but no force). The following options are
supported for the rolling friction model

 
The first required keyword 
in the pair coeff command is the choice
of normal force contact model, for which current opitons are {hooke}, {hertz} 
 
The {gran} styles use the following formulas for the frictional force
between two granular particles, as described in
"(Brilliantov)"_#Brilliantov, "(Silbert)"_#Silbert, and
"(Zhang)"_#Zhang3, when the distance r between two particles of radii
Ri and Rj is less than their contact distance d = Ri + Rj.  There is
no force between the particles when r > d.

The two Hookean styles use this formula:

:c,image(Eqs/pair_gran_hooke.jpg)

The Hertzian style uses this formula:

:c,image(Eqs/pair_gran_hertz.jpg)

In both equations the first parenthesized term is the normal force
between the two particles and the second parenthesized term is the
tangential force.  The normal force has 2 terms, a contact force and a
damping force.  The tangential force also has 2 terms: a shear force
and a damping force.  The shear force is a "history" effect that
accounts for the tangential displacement between the particles for the
duration of the time they are in contact.  This term is included in
pair styles {hooke/history} and {hertz/history}, but is not included
in pair style {hooke}.  The tangential damping force term is included
in all three pair styles if {dampflag} is set to 1; it is not included
if {dampflag} is set to 0.

The other quantities in the equations are as follows:

delta = d - r = overlap distance of 2 particles
Kn = elastic constant for normal contact
Kt = elastic constant for tangential contact
gamma_n = viscoelastic damping constant for normal contact
gamma_t = viscoelastic damping constant for tangential contact
m_eff = Mi Mj / (Mi + Mj) = effective mass of 2 particles of mass Mi and Mj
Delta St = tangential displacement vector between 2 particles \
      which is truncated to satisfy a frictional yield criterion
n_ij = unit vector along the line connecting the centers of the 2 particles
Vn = normal component of the relative velocity of the 2 particles
Vt = tangential component of the relative velocity of the 2 particles :ul

The Kn, Kt, gamma_n, and gamma_t coefficients are specified as
parameters to the pair_style command.  If a NULL is used for Kt, then
a default value is used where Kt = 2/7 Kn.  If a NULL is used for
gamma_t, then a default value is used where gamma_t = 1/2 gamma_n.

The interpretation and units for these 4 coefficients are different in
the Hookean versus Hertzian equations.

The Hookean model is one where the normal push-back force for two
overlapping particles is a linear function of the overlap distance.
Thus the specified Kn is in units of (force/distance).  Note that this
push-back force is independent of absolute particle size (in the
monodisperse case) and of the relative sizes of the two particles (in
the polydisperse case).  This model also applies to the other terms in
the force equation so that the specified gamma_n is in units of
(1/time), Kt is in units of (force/distance), and gamma_t is in units
of (1/time).

The Hertzian model is one where the normal push-back force for two
overlapping particles is proportional to the area of overlap of the
two particles, and is thus a non-linear function of overlap distance.
Thus Kn has units of force per area and is thus specified in units of
(pressure).  The effects of absolute particle size (monodispersity)
and relative size (polydispersity) are captured in the radii-dependent
pre-factors.  When these pre-factors are carried through to the other
terms in the force equation it means that the specified gamma_n is in
units of (1/(time*distance)), Kt is in units of (pressure), and
gamma_t is in units of (1/(time*distance)).

Note that in the Hookean case, Kn can be thought of as a linear spring
constant with units of force/distance.  In the Hertzian case, Kn is
like a non-linear spring constant with units of force/area or
pressure, and as shown in the "(Zhang)"_#Zhang3 paper, Kn = 4G /
(3(1-nu)) where nu = the Poisson ratio, G = shear modulus = E /
(2(1+nu)), and E = Young's modulus.  Similarly, Kt = 4G / (2-nu).
(NOTE: in an earlier version of the manual, we incorrectly stated that
Kt = 8G / (2-nu).)

Thus in the Hertzian case Kn and Kt can be set to values that
corresponds to properties of the material being modeled.  This is also
true in the Hookean case, except that a spring constant must be chosen
that is appropriate for the absolute size of particles in the model.
Since relative particle sizes are not accounted for, the Hookean
styles may not be a suitable model for polydisperse systems.

NOTE: In versions of LAMMPS before 9Jan09, the equation for Hertzian
interactions did not include the sqrt(RiRj/Ri+Rj) term and thus was
not as accurate for polydisperse systems.  For monodisperse systems,
sqrt(RiRj/Ri+Rj) is a constant factor that effectively scales all 4
coefficients: Kn, Kt, gamma_n, gamma_t.  Thus you can set the values
of these 4 coefficients appropriately in the current code to reproduce
the results of a previous Hertzian monodisperse calculation.  For
example, for the common case of a monodisperse system with particles
of diameter 1, all 4 of these coefficients should now be set 2x larger
than they were previously.

Xmu is also specified in the pair_style command and is the upper limit
of the tangential force through the Coulomb criterion Ft = xmu*Fn,
where Ft and Fn are the total tangential and normal force components
in the formulas above.  Thus in the Hookean case, the tangential force
between 2 particles grows according to a tangential spring and
dash-pot model until Ft/Fn = xmu and is then held at Ft = Fn*xmu until
the particles lose contact.  In the Hertzian case, a similar analogy
holds, though the spring is no longer linear.

NOTE: Normally, xmu should be specified as a fractional value between
0.0 and 1.0, however LAMMPS allows large values (up to 1.0e4) to allow
for modeling of systems which can sustain very large tangential
forces.

The effective mass {m_eff} is given by the formula above for two
isolated particles.  If either particle is part of a rigid body, its
mass is replaced by the mass of the rigid body in the formula above.
This is determined by searching for a "fix rigid"_fix_rigid.html
command (or its variants).

For granular styles there are no additional coefficients to set for
each pair of atom types via the "pair_coeff"_pair_coeff.html command.
All settings are global and are made via the pair_style command.
However you must still use the "pair_coeff"_pair_coeff.html for all
pairs of granular atom types.  For example the command

pair_coeff * * :pre

should be used if all atoms in the simulation interact via a granular
potential (i.e. one of the pair styles above is used).  If a granular
potential is used as a sub-style of "pair_style
hybrid"_pair_hybrid.html, then specific atom types can be used in the
pair_coeff command to determine which atoms interact via a granular
potential.

:line

Styles with a {gpu}, {intel}, {kk}, {omp}, or {opt} suffix are
functionally the same as the corresponding style without the suffix.
They have been optimized to run faster, depending on your available
hardware, as discussed on the "Speed packages"_Speed_packages.html doc
page.  The accelerated styles take the same arguments and should
produce the same results, except for round-off and precision issues.

These accelerated styles are part of the GPU, USER-INTEL, KOKKOS,
USER-OMP and OPT packages, respectively.  They are only enabled if
LAMMPS was built with those packages.  See the "Build
package"_Build_package.html doc page for more info.

You can specify the accelerated styles explicitly in your input script
by including their suffix, or you can use the "-suffix command-line
switch"_Run_options.html when you invoke LAMMPS, or you can use the
"suffix"_suffix.html command in your input script.

See the "Speed packages"_Speed_packages.html doc page for more
instructions on how to use the accelerated styles effectively.

:line

[Mixing, shift, table, tail correction, restart, rRESPA info]:

The "pair_modify"_pair_modify.html mix, shift, table, and tail options
are not relevant for granular pair styles.

These pair styles write their information to "binary restart
files"_restart.html, so a pair_style command does not need to be
specified in an input script that reads a restart file.

These pair styles can only be used via the {pair} keyword of the
"run_style respa"_run_style.html command.  They do not support the
{inner}, {middle}, {outer} keywords.

The single() function of these pair styles returns 0.0 for the energy
of a pairwise interaction, since energy is not conserved in these
dissipative potentials.  It also returns only the normal component of
the pairwise interaction force.  However, the single() function also
calculates 10 extra pairwise quantities.  The first 3 are the
components of the tangential force between particles I and J, acting
on particle I.  The 4th is the magnitude of this tangential force.
The next 3 (5-7) are the components of the relative velocity in the
normal direction (along the line joining the 2 sphere centers).  The
last 3 (8-10) the components of the relative velocity in the
tangential direction.

These extra quantities can be accessed by the "compute
pair/local"_compute_pair_local.html command, as {p1}, {p2}, ...,
{p10}.

:line

[Restrictions:]

All the granular pair styles are part of the GRANULAR package.  It is
only enabled if LAMMPS was built with that package.  See the "Build
package"_Build_package.html doc page for more info.

These pair styles require that atoms store torque and angular velocity
(omega) as defined by the "atom_style"_atom_style.html.  They also
require a per-particle radius is stored.  The {sphere} atom style does
all of this.

This pair style requires you to use the "comm_modify vel
yes"_comm_modify.html command so that velocities are stored by ghost
atoms.

These pair styles will not restart exactly when using the
"read_restart"_read_restart.html command, though they should provide
statistically similar results.  This is because the forces they
compute depend on atom velocities.  See the
"read_restart"_read_restart.html command for more details.

[Related commands:]

"pair_coeff"_pair_coeff.html

[Default:] none

:line

:link(Brilliantov)
[(Brilliantov)] Brilliantov, Spahn, Hertzsch, Poschel, Phys Rev E, 53,
p 5382-5392 (1996).

:link(Silbert)
[(Silbert)] Silbert, Ertas, Grest, Halsey, Levine, Plimpton, Phys Rev
E, 64, p 051302 (2001).

:link(Zhang3)
[(Zhang)] Zhang and Makse, Phys Rev E, 72, p 011301 (2005).
