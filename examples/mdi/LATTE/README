Examples in this directoy use LAMMPS as an MDI driver code and the
LATTE tight-binding code as an MDI engine to perform ab initio MD and
evaluate the energy/forces/virial for a series of MD snapshots or
conformations with LATTE.

Talk about LATTE package and fix latte command

---------

Build LAMMPS with MDI support via the MDI package:

% cd lammps/lib/mdi
% python Install.py -m mpi    # creates libmdi.a (not shared)
% cd lammps/src
% make yes-mdi
% make mpi                    # builds LAMMPS with MDI

---------

Build LATTE in its own Git repo:


cd latte/git
  cp makefiles/makefile.CHOICES.mdi makefile.CHOICES
  toggle settings:
    MAKELIB = OFF
    SHARED = ON
    MDI = ON
  for MDI, also need to set MDI_PATH to mdi/git/build/MDI_Library
  also commented out some LIB lines for Cuda
  then just type "make"
  produces exe = LATTE_DOUBLE and libfile = liblatte_mdi.so
  the exe is not the non-MDI LATTE main, but a new one that goes into engine mode

---------

copy lmp_mpi and LATTE_DOUBLE into this dir
set LD_LIB_PATH to ~/latte/git for liblatte_mdi.so file in plugin mode
LATTE always uses in.latte as input file, contains no element info
LATTE always uses latte.in

this version of LATTE does not use MPI, only OpenMP or GPU
run LATTE with OpenMP: setenv OMP_NUM_THREADS max-core-count

---------

Run AIMD test problem:

build LAMMPS with molecule package
LAMMPS uses in.mdi.aimd or in.mdi.aimd.plugin

++ Run with MPI: 1 proc each

mpirun -np 1 lmp_mpi -mdi "-name LMP -role DRIVER -method MPI" \
  -log log.aimd.driver.mpi.1 -in in.mdi.aimd : \
  -np 1 LATTE_DOUBLE -mdi "-name LATTE -role ENGINE -method MPI"

++ Run in plugin mode: 1 proc

lmp_mpi -mdi \
  "-name LMP -role DRIVER -method LINK -plugin_path /home/sjplimp/latte/git" \
  -log log.aimd.driver.plugin.1 -in in.mdi.aimd.plugin

---------

Run sequence of configs:

++ Run with MPI: 1 proc each

mpirun -np 1 lmp_mpi -mdi "-name LMP -role DRIVER -method MPI" \
  -log log.series.driver.mpi.1 -in in.series.driver : \
  -np 1 LATTE_DOUBLE -mdi "-name LATTE -role ENGINE -method MPI"

++ Run in plugin mode: 1 proc

lmp_mpi -mdi \
  "-name LMP -role DRIVER -method LINK -plugin_path /home/sjplimp/latte/git" \
  -log log.series.driver.plugin.1 -in in.series.driver.plugin
