[TODO/DONE] pair_pace.cpp and pair_pace.h will have to go into src/USER-PACE and thus also need to conform to our requirements.

[TODO] also src/USER-PACE would need to have an Install.sh file that integrates the settings from the lib folder into the conventional build process.
[TODO] there would have to be a lib/pace folder for building/interfacing to the library.

[TODO] how you organize your repo is up to you. a better way to describe what you would have to do is to point you to examples.
which of the examples is relevant depends on what build system you are using for your "PACE" external package.

If you are using CMake to build it, you can look at the KIM package
If you are using autoconf/automake, you can look at the USER-PLUMED package
If you are using neither (just a plain Makefile), you can look at the VORONOI or QUIP package
The following additional modifications are needed:

[TODO] lib/pace: needs one or more Makefile.lammps, a README and an Install.py file
[TODO] src/Makefile: needs support for the USER-PACE package and compiling via lib-pace. Also the package needs to be added to the PACKEXT and PACKLIB variables

[DONE] cmake/Modules/Packages/USER-PACE.cmake needs to be added
[DONE] cmake/CMakeLists.txt needs to include it in case the package is enabled.

[TODO] doc/src/Build_extra.rst needs to include the build instructions for CMake and traditional make
[TODO] doc/src/Package_user.rst and doc/src/Package_details.rst needs to contain relevant information and links


Because of the different build systems, there are different steps required, but each of the examples I've pointed out are tested and used regularly and thus should be working sufficiently well. 
Mind you the QUIP package is set up in such a way, that no automatic download is possible and a manual download and compilation is required. So that is the least preferred and least convenient option.

We are happy to provide more details, but that requires that you first have something that already is following either of the suggested variants, so that we don't have to discuss in all generality.

I would also suggest to close this pull request here, leave all files in place, but then start a new branch from the current master and then move the few things over you need to retain, 
add the build environment files and then start working on getting it to do what it should.