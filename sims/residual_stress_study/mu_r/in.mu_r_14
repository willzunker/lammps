############################### SIMULATION SETTINGS ###################################################

atom_style sphere 
atom_modify map array 
comm_modify vel yes
units si
newton off
neighbor 6.600000e-04 bin
neigh_modify every 1 delay 0 check yes 
timestep 1.042716e-05

######################### SIMULATION BOUNDING BOX, INTEGRATION, AND, GRAVITY ###########################

boundary f f f
read_data ../spheres.data

######################################### ADD DIE AND ATOM PARAMETERIZATION ##############################################

variable atomRadius equal 3.300000e-04
variable atomDiameter equal 2*${atomRadius}
variable atomDensity equal 1560 
variable dieRadius equal 4e-3
variable dieHeight equal 1e-2

########################### PARTICLE MATERIAL PROPERTIES AND FORCE MODEL ###############################

pair_style granular
# mdr = E, nu, Y, gamma, psi_b, CoR
# linear_history = k_t, x_gamma,t, mu_s 
variable YoungsModulus equal 1.000000e+06
variable PoissonsRatio equal 0.300000
variable YieldStress equal 1.000000e+04
variable SurfaceEnergy equal 3.300000e-02
variable SurfaceEnergyWall equal 0.000000e+00
variable psi_b equal 0.500000
variable CoR equal 0.5
variable kt equal 2/7*${YoungsModulus}*${atomRadius}
variable kt_wall equal 2/7*${YoungsModulus}*${atomRadius}
variable xgammat equal 0.0
variable mu_s equal 1.000000
variable mu_s_wall equal 0.100000
variable mu_roll equal 0.265306
variable k_roll equal 2.25*${mu_roll}*${mu_roll}*${YoungsModulus}*${atomRadius}
variable gamma_roll equal 0.0

pair_coeff * * mdr ${YoungsModulus} ${PoissonsRatio} ${YieldStress} ${SurfaceEnergy} ${psi_b} ${CoR} damping none tangential linear_history ${kt} ${xgammat} ${mu_s} rolling sds ${k_roll} ${gamma_roll} ${mu_roll}
#pair_coeff * * mdr ${YoungsModulus} ${PoissonsRatio} ${YieldStress} ${SurfaceEnergy} ${psi_b} ${CoR} tangential linear_history ${kt} ${xgammat} ${mu_s} damping none
#pair_coeff * * mdr ${YoungsModulus} ${PoissonsRatio} ${YieldStress} ${SurfaceEnergy} ${psi_b} ${CoR} tangential linear_nohistory 0.0 0.0 damping none

######################################### ADD DIE AND PUNCH WALLS ################################################

variable disp_upper equal 0.0
variable disp_lower equal 0.0

variable wall_contact_string string "granular mdr ${YoungsModulus} ${PoissonsRatio} ${YieldStress} ${SurfaceEnergyWall} ${psi_b} ${CoR} damping none tangential linear_history ${kt_wall} ${xgammat} ${mu_s_wall} rolling sds ${k_roll} ${gamma_roll} ${mu_roll}"
#variable wall_contact_string string "granular mdr ${YoungsModulus} ${PoissonsRatio} ${YieldStress} ${SurfaceEnergyWall} ${psi_b} ${CoR} tangential linear_history ${kt} ${xgammat} ${mu_s} damping none"
#variable wall_contact_string string "granular mdr ${YoungsModulus} ${PoissonsRatio} ${YieldStress} ${SurfaceEnergyWall} ${psi_b} ${CoR} tangential linear_nohistory 0.0 0.0 damping none"

variable dieHeight2 equal 2*${dieHeight}

region lowerPunch plane 0 0 0 0 0 1 side in units box move NULL NULL v_disp_lower units box
region upperPunch plane 0 0 ${dieHeight} 0 0 -1 side in move NULL NULL v_disp_upper units box
region die cylinder z 0 0 ${dieRadius} 0 ${dieHeight2} side in units box

fix lowerPunch all wall/gran/region ${wall_contact_string} region lowerPunch contacts
fix upperPunch all wall/gran/region ${wall_contact_string} region upperPunch contacts
fix die all wall/gran/region ${wall_contact_string} region die contacts 

##################################### INSERT PARTICLES ####################################################

fix 1 all nve/sphere
fix grav all gravity 9.81 vector 0 0 -1

######################################## SCREEN OUTPUT  ####################################################

compute 1 all erotate/sphere
thermo_style custom dt step atoms ke vol
thermo 100
thermo_modify lost ignore norm no

##################################### SET UP DUMP OUTPUTS  ####################################################

compute ke all ke/atom
variable output_rate equal round(1e-3/dt)
dump dumpParticles all custom ${output_rate} mu_r_14.dump id type mass diameter x y z vx vy vz fx fy fz c_ke
#variable az_upperPunch atom f_upperPunch[7]
#variable afz_upperPunch atom f_upperPunch[4]
run 0

compute sigmaxx all property/atom d_sigmaxx
compute sigmayy all property/atom d_sigmayy
compute sigmazz all property/atom d_sigmazz
compute Velas all property/atom d_Velas

compute sigmaxx_ave all reduce ave c_sigmaxx
compute sigmayy_ave all reduce ave c_sigmayy
compute sigmazz_ave all reduce ave c_sigmazz
compute Velas_sum all reduce sum c_Velas

variable sxx_ave equal c_sigmaxx_ave
variable syy_ave equal c_sigmayy_ave
variable szz_ave equal c_sigmazz_ave
variable Vparticles equal c_Velas_sum

fix log all print 1 "${sxx_ave} ${syy_ave} ${szz_ave} ${Vparticles}" file mu_r_14_avg_stresses.csv screen no

compute avgPunchForce all reduce sum f_upperPunch[4]
variable avgPunchForce equal c_avgPunchForce

fix print1 all print 1 "${disp_upper} ${avgPunchForce}" file mu_r_14_force_disp.csv screen no 

######################################### RUN SIMULATION ##########################################

variable upper_punch_stroke equal 0.631761*${dieHeight}
variable vel_upper equal 0.25

variable settling_steps equal round(0.02/dt)
variable compression_steps equal 2*round(${upper_punch_stroke}/${vel_upper}/dt)
variable ejection_steps equal ${compression_steps}
variable free_float_steps equal round(0.025/dt)
variable total_steps equal ${settling_steps}+${compression_steps}+${ejection_steps}+${free_float_steps}

print "Total steps = ${total_steps}"

##### SETTLING #####

run ${settling_steps}

##### Compression & Release #####

variable punch_frequency equal PI/2/(dt*${compression_steps}/2)
variable disp_upper equal -${upper_punch_stroke}*sin(${punch_frequency}*elapsed*dt)
variable short_release equal round(${compression_steps}*1.0)
run ${short_release}

