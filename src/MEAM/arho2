./pair_meam.cpp:  meam_inst->meam_dens_setup(atom->nmax, nall, n);
./pair_meam.cpp:  printf("before meam_dens_init %f %f\n", meam_inst->arho2m[0][0], meam_inst->arho3m[0][0]);
./pair_meam.cpp:    meam_inst->meam_dens_init(i,ntype,type,map,x,
./pair_meam.cpp:  printf("after meam_dens_init %f %f\n", meam_inst->arho2m[0][0], meam_inst->arho3m[0][0]);
./pair_meam.cpp:  printf("before revcomm %f %f\n", meam_inst->arho2m[0][0], meam_inst->arho3m[0][0]);
./pair_meam.cpp:  printf("after revcomm %f %f\n", meam_inst->arho2m[0][0], meam_inst->arho3m[0][0]);
./pair_meam.cpp:  meam_inst->meam_dens_final(nlocal,eflag_either,eflag_global,eflag_atom,
./pair_meam.cpp:  printf("before forcomm %f %f\n", meam_inst->arho2m[0][0], meam_inst->arho3m[0][0]);
./pair_meam.cpp:  printf("after forcomm %f %f\n", meam_inst->arho2m[0][0], meam_inst->arho3m[0][0]);
./pair_meam.cpp:    meam_inst->meam_force(i,eflag_global,eflag_atom,vflag_global,
./pair_meam.cpp:  meam_inst->msmeamflag = 0;
./pair_meam.cpp:        meam_inst->msmeamflag = 1;
./pair_meam.cpp:  meam_inst->meam_setup_done(&cutmax);
./pair_meam.cpp:  meam_inst->meam_setup_global(nlibelements, lat.data(), ielement.data(), atwt.data(),
./pair_meam.cpp:  meam_inst->meam_setup_global(nlibelements, lat.data(), ielement.data(), atwt.data(),
./pair_meam.cpp:    meam_inst->meam_setup_param(which,value,nindex,index,&errorflag);
./pair_meam.cpp:    buf[m++] = meam_inst->rho0[j];
./pair_meam.cpp:    buf[m++] = meam_inst->rho1[j];
./pair_meam.cpp:    buf[m++] = meam_inst->rho2[j];
./pair_meam.cpp:    buf[m++] = meam_inst->rho3[j];
./pair_meam.cpp:    buf[m++] = meam_inst->frhop[j];
./pair_meam.cpp:    buf[m++] = meam_inst->gamma[j];
./pair_meam.cpp:    buf[m++] = meam_inst->dgamma1[j];
./pair_meam.cpp:    buf[m++] = meam_inst->dgamma2[j];
./pair_meam.cpp:    buf[m++] = meam_inst->dgamma3[j];
./pair_meam.cpp:    buf[m++] = meam_inst->arho2b[j];
./pair_meam.cpp:    buf[m++] = meam_inst->arho1[j][0];
./pair_meam.cpp:    buf[m++] = meam_inst->arho1[j][1];
./pair_meam.cpp:    buf[m++] = meam_inst->arho1[j][2];
./pair_meam.cpp:    buf[m++] = meam_inst->arho2[j][0];
./pair_meam.cpp:    buf[m++] = meam_inst->arho2[j][1];
./pair_meam.cpp:    buf[m++] = meam_inst->arho2[j][2];
./pair_meam.cpp:    buf[m++] = meam_inst->arho2[j][3];
./pair_meam.cpp:    buf[m++] = meam_inst->arho2[j][4];
./pair_meam.cpp:    buf[m++] = meam_inst->arho2[j][5];
./pair_meam.cpp:    for (k = 0; k < 10; k++) buf[m++] = meam_inst->arho3[j][k];
./pair_meam.cpp:    buf[m++] = meam_inst->arho3b[j][0];
./pair_meam.cpp:    buf[m++] = meam_inst->arho3b[j][1];
./pair_meam.cpp:    buf[m++] = meam_inst->arho3b[j][2];
./pair_meam.cpp:    buf[m++] = meam_inst->t_ave[j][0];
./pair_meam.cpp:    buf[m++] = meam_inst->t_ave[j][1];
./pair_meam.cpp:    buf[m++] = meam_inst->t_ave[j][2];
./pair_meam.cpp:    buf[m++] = meam_inst->tsq_ave[j][0];
./pair_meam.cpp:    buf[m++] = meam_inst->tsq_ave[j][1];
./pair_meam.cpp:    buf[m++] = meam_inst->tsq_ave[j][2];
./pair_meam.cpp:      buf[m++] = meam_inst->arho2mb[j];
./pair_meam.cpp:      buf[m++] = meam_inst->arho1m[j][0];
./pair_meam.cpp:      buf[m++] = meam_inst->arho1m[j][1];
./pair_meam.cpp:      buf[m++] = meam_inst->arho1m[j][2];
./pair_meam.cpp:      buf[m++] = meam_inst->arho2m[j][0];
./pair_meam.cpp:      buf[m++] = meam_inst->arho2m[j][1];
./pair_meam.cpp:      buf[m++] = meam_inst->arho2m[j][2];
./pair_meam.cpp:      buf[m++] = meam_inst->arho2m[j][3];
./pair_meam.cpp:      buf[m++] = meam_inst->arho2m[j][4];
./pair_meam.cpp:      buf[m++] = meam_inst->arho2m[j][5];
./pair_meam.cpp:      for (k = 0; k < 10; k++) buf[m++] = meam_inst->arho3m[j][k];
./pair_meam.cpp:      buf[m++] = meam_inst->arho3mb[j][0];
./pair_meam.cpp:      buf[m++] = meam_inst->arho3mb[j][1];
./pair_meam.cpp:      buf[m++] = meam_inst->arho3mb[j][2];
./pair_meam.cpp:    meam_inst->rho0[i] = buf[m++];
./pair_meam.cpp:    meam_inst->rho1[i] = buf[m++];
./pair_meam.cpp:    meam_inst->rho2[i] = buf[m++];
./pair_meam.cpp:    meam_inst->rho3[i] = buf[m++];
./pair_meam.cpp:    meam_inst->frhop[i] = buf[m++];
./pair_meam.cpp:    meam_inst->gamma[i] = buf[m++];
./pair_meam.cpp:    meam_inst->dgamma1[i] = buf[m++];
./pair_meam.cpp:    meam_inst->dgamma2[i] = buf[m++];
./pair_meam.cpp:    meam_inst->dgamma3[i] = buf[m++];
./pair_meam.cpp:    meam_inst->arho2b[i] = buf[m++];
./pair_meam.cpp:    meam_inst->arho1[i][0] = buf[m++];
./pair_meam.cpp:    meam_inst->arho1[i][1] = buf[m++];
./pair_meam.cpp:    meam_inst->arho1[i][2] = buf[m++];
./pair_meam.cpp:    meam_inst->arho2[i][0] = buf[m++];
./pair_meam.cpp:    meam_inst->arho2[i][1] = buf[m++];
./pair_meam.cpp:    meam_inst->arho2[i][2] = buf[m++];
./pair_meam.cpp:    meam_inst->arho2[i][3] = buf[m++];
./pair_meam.cpp:    meam_inst->arho2[i][4] = buf[m++];
./pair_meam.cpp:    meam_inst->arho2[i][5] = buf[m++];
./pair_meam.cpp:    for (k = 0; k < 10; k++) meam_inst->arho3[i][k] = buf[m++];
./pair_meam.cpp:    meam_inst->arho3b[i][0] = buf[m++];
./pair_meam.cpp:    meam_inst->arho3b[i][1] = buf[m++];
./pair_meam.cpp:    meam_inst->arho3b[i][2] = buf[m++];
./pair_meam.cpp:    meam_inst->t_ave[i][0] = buf[m++];
./pair_meam.cpp:    meam_inst->t_ave[i][1] = buf[m++];
./pair_meam.cpp:    meam_inst->t_ave[i][2] = buf[m++];
./pair_meam.cpp:    meam_inst->tsq_ave[i][0] = buf[m++];
./pair_meam.cpp:    meam_inst->tsq_ave[i][1] = buf[m++];
./pair_meam.cpp:    meam_inst->tsq_ave[i][2] = buf[m++];
./pair_meam.cpp:      meam_inst->arho2mb[i] = buf[m++];
./pair_meam.cpp:      meam_inst->arho1m[i][0] = buf[m++];
./pair_meam.cpp:      meam_inst->arho1m[i][1] = buf[m++];
./pair_meam.cpp:      meam_inst->arho1m[i][2] = buf[m++];
./pair_meam.cpp:      meam_inst->arho2m[i][0] = buf[m++];
./pair_meam.cpp:      meam_inst->arho2m[i][1] = buf[m++];
./pair_meam.cpp:      meam_inst->arho2m[i][2] = buf[m++];
./pair_meam.cpp:      meam_inst->arho2m[i][3] = buf[m++];
./pair_meam.cpp:      meam_inst->arho2m[i][4] = buf[m++];
./pair_meam.cpp:      meam_inst->arho2m[i][5] = buf[m++];
./pair_meam.cpp:      for (k = 0; k < 10; k++) meam_inst->arho3m[i][k] = buf[m++];
./pair_meam.cpp:      meam_inst->arho3mb[i][0] = buf[m++];
./pair_meam.cpp:      meam_inst->arho3mb[i][1] = buf[m++];
./pair_meam.cpp:      meam_inst->arho3mb[i][2] = buf[m++];
./pair_meam.cpp:    buf[m++] = meam_inst->rho0[i];
./pair_meam.cpp:    buf[m++] = meam_inst->arho2b[i];
./pair_meam.cpp:    buf[m++] = meam_inst->arho1[i][0];
./pair_meam.cpp:    buf[m++] = meam_inst->arho1[i][1];
./pair_meam.cpp:    buf[m++] = meam_inst->arho1[i][2];
./pair_meam.cpp:    buf[m++] = meam_inst->arho2[i][0];
./pair_meam.cpp:    buf[m++] = meam_inst->arho2[i][1];
./pair_meam.cpp:    buf[m++] = meam_inst->arho2[i][2];
./pair_meam.cpp:    buf[m++] = meam_inst->arho2[i][3];
./pair_meam.cpp:    buf[m++] = meam_inst->arho2[i][4];
./pair_meam.cpp:    buf[m++] = meam_inst->arho2[i][5];
./pair_meam.cpp:    for (k = 0; k < 10; k++) buf[m++] = meam_inst->arho3[i][k];
./pair_meam.cpp:    buf[m++] = meam_inst->arho3b[i][0];
./pair_meam.cpp:    buf[m++] = meam_inst->arho3b[i][1];
./pair_meam.cpp:    buf[m++] = meam_inst->arho3b[i][2];
./pair_meam.cpp:    buf[m++] = meam_inst->t_ave[i][0];
./pair_meam.cpp:    buf[m++] = meam_inst->t_ave[i][1];
./pair_meam.cpp:    buf[m++] = meam_inst->t_ave[i][2];
./pair_meam.cpp:    buf[m++] = meam_inst->tsq_ave[i][0];
./pair_meam.cpp:    buf[m++] = meam_inst->tsq_ave[i][1];
./pair_meam.cpp:    buf[m++] = meam_inst->tsq_ave[i][2];
./pair_meam.cpp:      buf[m++] = meam_inst->arho2mb[i];
./pair_meam.cpp:      buf[m++] = meam_inst->arho1m[i][0];
./pair_meam.cpp:      buf[m++] = meam_inst->arho1m[i][1];
./pair_meam.cpp:      buf[m++] = meam_inst->arho1m[i][2];
./pair_meam.cpp:      buf[m++] = meam_inst->arho2m[i][0];
./pair_meam.cpp:      buf[m++] = meam_inst->arho2m[i][1];
./pair_meam.cpp:      buf[m++] = meam_inst->arho2m[i][2];
./pair_meam.cpp:      buf[m++] = meam_inst->arho2m[i][3];
./pair_meam.cpp:      buf[m++] = meam_inst->arho2m[i][4];
./pair_meam.cpp:      buf[m++] = meam_inst->arho2m[i][5];
./pair_meam.cpp:      for (k = 0; k < 10; k++) buf[m++] = meam_inst->arho3m[i][k];
./pair_meam.cpp:      buf[m++] = meam_inst->arho3mb[i][0];
./pair_meam.cpp:      buf[m++] = meam_inst->arho3mb[i][1];
./pair_meam.cpp:      buf[m++] = meam_inst->arho3mb[i][2];
./pair_meam.cpp:    meam_inst->rho0[j] += buf[m++];
./pair_meam.cpp:    meam_inst->arho2b[j] += buf[m++];
./pair_meam.cpp:    meam_inst->arho1[j][0] += buf[m++];
./pair_meam.cpp:    meam_inst->arho1[j][1] += buf[m++];
./pair_meam.cpp:    meam_inst->arho1[j][2] += buf[m++];
./pair_meam.cpp:    meam_inst->arho2[j][0] += buf[m++];
./pair_meam.cpp:    meam_inst->arho2[j][1] += buf[m++];
./pair_meam.cpp:    meam_inst->arho2[j][2] += buf[m++];
./pair_meam.cpp:    meam_inst->arho2[j][3] += buf[m++];
./pair_meam.cpp:    meam_inst->arho2[j][4] += buf[m++];
./pair_meam.cpp:    meam_inst->arho2[j][5] += buf[m++];
./pair_meam.cpp:    for (k = 0; k < 10; k++) meam_inst->arho3[j][k] += buf[m++];
./pair_meam.cpp:    meam_inst->arho3b[j][0] += buf[m++];
./pair_meam.cpp:    meam_inst->arho3b[j][1] += buf[m++];
./pair_meam.cpp:    meam_inst->arho3b[j][2] += buf[m++];
./pair_meam.cpp:    meam_inst->t_ave[j][0] += buf[m++];
./pair_meam.cpp:    meam_inst->t_ave[j][1] += buf[m++];
./pair_meam.cpp:    meam_inst->t_ave[j][2] += buf[m++];
./pair_meam.cpp:    meam_inst->tsq_ave[j][0] += buf[m++];
./pair_meam.cpp:    meam_inst->tsq_ave[j][1] += buf[m++];
./pair_meam.cpp:    meam_inst->tsq_ave[j][2] += buf[m++];
./pair_meam.cpp:      meam_inst->arho2mb[j] += buf[m++];
./pair_meam.cpp:      meam_inst->arho1m[j][0] += buf[m++];
./pair_meam.cpp:      meam_inst->arho1m[j][1] += buf[m++];
./pair_meam.cpp:      meam_inst->arho1m[j][2] += buf[m++];
./pair_meam.cpp:      meam_inst->arho2m[j][0] += buf[m++];
./pair_meam.cpp:      meam_inst->arho2m[j][1] += buf[m++];
./pair_meam.cpp:      meam_inst->arho2m[j][2] += buf[m++];
./pair_meam.cpp:      meam_inst->arho2m[j][3] += buf[m++];
./pair_meam.cpp:      meam_inst->arho2m[j][4] += buf[m++];
./pair_meam.cpp:      meam_inst->arho2m[j][5] += buf[m++];
./pair_meam.cpp:      for (k = 0; k < 10; k++) meam_inst->arho3m[j][k] += buf[m++];
./pair_meam.cpp:      meam_inst->arho3mb[j][0] += buf[m++];
./pair_meam.cpp:      meam_inst->arho3mb[j][1] += buf[m++];
./pair_meam.cpp:      meam_inst->arho3mb[j][2] += buf[m++];
./pair_meam.cpp:  double bytes = 11 * meam_inst->nmax * sizeof(double);
./pair_meam.cpp:  bytes += (double)(3 + 6 + 10 + 3 + 3 + 3) * meam_inst->nmax * sizeof(double);
./pair_meam.cpp:  bytes += (double)3 * meam_inst->maxneigh * sizeof(double);
